{
  "env": {
    "browser": true,
    "node": true,
    "es2020": true
  },
  "globals": {},
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true,
      "experimentalObjectRestSpread": true,
      "experimentalDecorators": true,
      "legacyDecorators": true
    },
    "warnOnUnsupportedTypeScriptVersion": false,
    "jsx": true,
    "project": "tsconfig.json"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "prettier",
    "import",
    "react-native",
    "react-hooks",
    "unicorn",
    "babel",
    "promise"
  ],
  "reportUnusedDisableDirectives": true,
  "rules": {
    "react/boolean-prop-naming": [
      0,
      {
        "validateNested": true,
        "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+"
      }
    ],
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "no-unused-expressions": [
      0
    ],
    "no-return-assign": [
      "error",
      "except-parens"
    ],
    "lines-between-class-members": [
      0,
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "react/jsx-child-element-spacing": [
      0
    ],
    "react/jsx-one-expression-per-line": [
      0
    ],
    "react/destructuring-assignment": [
      0
    ],
    "react/forbid-component-props": [
      0
    ],
    "react/static-property-placement": [
      "warn"
    ],
    "react/state-in-constructor": [
      "warn",
      "never"
    ],
    "react/no-danger": [
      "warn"
    ],
    "react/forbid-dom-props": [
      0
    ],
    "react/no-unescaped-entities": [
      0
    ],
    "react/jsx-max-props-per-line": [
      "error",
      {
        "maximum": 1,
        "when": "multiline"
      }
    ],
    "react/no-deprecated": [
      "warn"
    ],
    "react/jsx-sort-props": [
      0,
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "noSortAlphabetically": true,
        "reservedFirst": true
      }
    ],
    "unicorn/filename-case": [
      "error",
      {
        "case": "kebabCase"
      }
    ],
    "unicorn/no-abusive-eslint-disable": [
      "warn"
    ],
    "react/jsx-indent": [
      "off",
      "tab",
      {
        "checkAttributes": true,
        "indentLogicalExpressions": true
      }
    ],
    "react/jsx-fragments": [
      "off",
      "syntax"
    ],
    "react-hooks/rules-of-hooks": [
      "error"
    ],
    "react-hooks/exhaustive-deps": [
      "warn"
    ],
    "valid-jsdoc": [
      0
    ],
    "babel/no-unused-expressions": [
      1
    ],
    "import/order": [
      0
    ],
    "import/no-unresolved": [
      0
    ],
    "import/default": [
      0
    ],
    "promise/always-return": [
      0
    ],
    "promise/prefer-await-to-then": [
      0
    ],
    "require-atomic-updates": [
      "warn"
    ],
    "prettier/prettier": [
      "error",
      {
        "trailingComma": "all",
        "useTabs": true,
        "singleQuote": true,
        "printWidth": 80,
        "arrowParens": "avoid"
      }
    ],
    "@typescript-eslint/indent": [
      "off",
      "tab",
      {
        "SwitchCase": 1,
        "flatTernaryExpressions": false,
        "offsetTernaryExpressions": false,
        "ignoreComments": false
      }
    ],
    "@typescript-eslint/prefer-readonly": [
      "off"
    ],
    "@typescript-eslint/prefer-readonly-parameter-types": [
      "off"
    ],
    "@typescript-eslint/adjacent-overload-signatures": [
      "error"
    ],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array-simple"
      }
    ],
    "@typescript-eslint/await-thenable": [
      "error"
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": false,
        "types": {
          "String": {
            "message": "Use `string` instead.",
            "fixWith": "string"
          },
          "Number": {
            "message": "Use `number` instead.",
            "fixWith": "number"
          },
          "Boolean": {
            "message": "Use `boolean` instead.",
            "fixWith": "boolean"
          },
          "Symbol": {
            "message": "Use `symbol` instead.",
            "fixWith": "symbol"
          },
          "Object": {
            "message": "The `Object` type is mostly the same as `unknown`. You probably want `Record<string, unknown>` instead. See https://github.com/typescript-eslint/typescript-eslint/pull/848",
            "fixWith": "Record<string, unknown>"
          },
          "{}": {
            "message": "The `{}` type is mostly the same as `unknown`. You probably want `Record<string, unknown>` instead.",
            "fixWith": "Record<string, unknown>"
          },
          "object": {
            "message": "The `object` type is hard to use. Use `Record<string, unknown>` instead. See: https://github.com/typescript-eslint/typescript-eslint/pull/848",
            "fixWith": "Record<string, unknown>"
          },
          "Function": "Use a specific function type instead, like `() => void`.",
          "Omit": "Prefer the `Except` type in the `type-fest` package instead as it's stricter."
        }
      }
    ],
    "@typescript-eslint/class-literal-property-style": [
      "error",
      "getters"
    ],
    "brace-style": [
      "off",
      "1tbs",
      {
        "allowSingleLine": false
      }
    ],
    "@typescript-eslint/brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": false
      }
    ],
    "comma-spacing": [
      "off",
      {
        "before": false,
        "after": true
      }
    ],
    "@typescript-eslint/comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "default-param-last": [
      "off"
    ],
    "@typescript-eslint/default-param-last": [
      "error"
    ],
    "dot-notation": [
      "off"
    ],
    "@typescript-eslint/dot-notation": [
      "error"
    ],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "allow-as-parameter"
      }
    ],
    "func-call-spacing": [
      "off",
      "never"
    ],
    "@typescript-eslint/func-call-spacing": [
      "error",
      "never"
    ],
    "indent": [
      "off",
      "tab",
      {
        "SwitchCase": 1,
        "flatTernaryExpressions": false,
        "offsetTernaryExpressions": false,
        "ignoreComments": false
      }
    ],
    "keyword-spacing": [
      "off"
    ],
    "@typescript-eslint/keyword-spacing": [
      "error"
    ],
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error"
    ],
    "@typescript-eslint/method-signature-style": [
      "error"
    ],
    "camelcase": [
      "off",
      {
        "properties": "always",
        "ignoreDestructuring": false,
        "ignoreImports": false,
        "ignoreGlobals": false
      }
    ],
    "@typescript-eslint/no-base-to-string": [
      "error"
    ],
    "no-array-constructor": [
      "off"
    ],
    "@typescript-eslint/no-array-constructor": [
      "error"
    ],
    "no-dupe-class-members": [
      "off"
    ],
    "@typescript-eslint/no-dupe-class-members": [
      "error"
    ],
    "@typescript-eslint/no-dynamic-delete": [
      "error"
    ],
    "no-empty-function": [
      "off"
    ],
    "@typescript-eslint/no-empty-function": [
      "error"
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "no-extra-parens": [
      "off"
    ],
    "no-extra-semi": [
      "off"
    ],
    "@typescript-eslint/no-extra-semi": [
      "error"
    ],
    "@typescript-eslint/no-extraneous-class": [
      "error",
      {
        "allowConstructorOnly": false,
        "allowEmpty": false,
        "allowStaticOnly": false,
        "allowWithDecorator": true
      }
    ],
    "no-void": [
      "error",
      {
        "allowAsStatement": true
      }
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        "ignoreVoid": true,
        "ignoreIIFE": true
      }
    ],
    "@typescript-eslint/no-for-in-array": [
      "error"
    ],
    "@typescript-eslint/no-inferrable-types": [
      "error"
    ],
    "@typescript-eslint/no-invalid-void-type": [
      "error"
    ],
    "@typescript-eslint/no-misused-new": [
      "error"
    ],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksConditionals": true,
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-this-alias": [
      "error",
      {
        "allowDestructuring": true
      }
    ],
    "no-throw-literal": [
      "off"
    ],
    "@typescript-eslint/no-throw-literal": [
      "error"
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
      "error"
    ],
    "no-constant-condition": [
      "off"
    ],
    "@typescript-eslint/no-unnecessary-qualifier": [
      "error"
    ],
    "@typescript-eslint/no-unnecessary-type-arguments": [
      "error"
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": [
      "error"
    ],
    "@typescript-eslint/no-unused-expressions": [
      "error"
    ],
    "no-unused-vars": [
      "off",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true,
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_$"
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true,
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_$"
      }
    ],
    "no-useless-constructor": [
      "off"
    ],
    "@typescript-eslint/no-useless-constructor": [
      "error"
    ],
    "@typescript-eslint/no-var-requires": [
      "error"
    ],
    "@typescript-eslint/prefer-as-const": [
      "error"
    ],
    "@typescript-eslint/prefer-for-of": [
      "error"
    ],
    "@typescript-eslint/prefer-function-type": [
      "error"
    ],
    "@typescript-eslint/prefer-includes": [
      "error"
    ],
    "@typescript-eslint/prefer-namespace-keyword": [
      "error"
    ],
    "@typescript-eslint/prefer-nullish-coalescing": [
      "error"
    ],
    "@typescript-eslint/prefer-optional-chain": [
      "error"
    ],
    "@typescript-eslint/prefer-reduce-type-parameter": [
      "error"
    ],
    "@typescript-eslint/prefer-string-starts-ends-with": [
      "error"
    ],
    "@typescript-eslint/prefer-ts-expect-error": [
      "error"
    ],
    "@typescript-eslint/promise-function-async": [
      "error",
      {
        "allowAny": true
      }
    ],
    "quotes": [
      "off",
      "single"
    ],
    "@typescript-eslint/quotes": [
      "error",
      "single"
    ],
    "@typescript-eslint/restrict-plus-operands": [
      "error"
    ],
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowNumber": true
      }
    ],
    "@typescript-eslint/return-await": [
      "error"
    ],
    "@typescript-eslint/require-array-sort-compare": [
      "error"
    ],
    "space-before-function-paren": [
      "off",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "@typescript-eslint/space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "semi": [
      "off",
      "always"
    ],
    "@typescript-eslint/semi": [
      "error",
      "always"
    ],
    "@typescript-eslint/switch-exhaustiveness-check": [
      "error"
    ],
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "path": "never"
      }
    ],
    "@typescript-eslint/type-annotation-spacing": [
      "error"
    ],
    "@typescript-eslint/prefer-regexp-exec": [
      "error"
    ],
    "@typescript-eslint/unified-signatures": [
      "error"
    ],
    "no-useless-catch": [
      "error"
    ],
    "no-redeclare": [
      "off"
    ],
    "@typescript-eslint/ban-ts-comment": [
      "error"
    ],
    "@typescript-eslint/explicit-module-boundary-types": [
      "warn"
    ],
    "@typescript-eslint/no-explicit-any": [
      "warn"
    ],
    "@typescript-eslint/no-extra-non-null-assertion": [
      "error"
    ],
    "@typescript-eslint/no-namespace": [
      "error"
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": [
      "error"
    ],
    "@typescript-eslint/no-non-null-assertion": [
      "warn"
    ],
    "constructor-super": [
      "off"
    ],
    "getter-return": [
      "off"
    ],
    "no-const-assign": [
      "off"
    ],
    "no-dupe-args": [
      "off"
    ],
    "no-dupe-keys": [
      "off"
    ],
    "no-func-assign": [
      "off"
    ],
    "no-import-assign": [
      "off"
    ],
    "no-new-symbol": [
      "off"
    ],
    "no-obj-calls": [
      "off"
    ],
    "no-setter-return": [
      "off"
    ],
    "no-this-before-super": [
      "off"
    ],
    "no-undef": [
      "off",
      {
        "typeof": true
      }
    ],
    "no-unreachable": [
      "off"
    ],
    "no-unsafe-negation": [
      "off"
    ],
    "no-var": [
      "error"
    ],
    "prefer-const": [
      "error"
    ],
    "prefer-rest-params": [
      "error"
    ],
    "prefer-spread": [
      "error"
    ],
    "valid-typeof": [
      "off",
      {
        "requireStringLiterals": false
      }
    ],
    "vue/html-self-closing": [
      0
    ],
    "vue/max-len": [
      0
    ],
    "vue/array-bracket-spacing": [
      "off"
    ],
    "vue/arrow-spacing": [
      "off"
    ],
    "vue/block-spacing": [
      "off"
    ],
    "vue/brace-style": [
      "off"
    ],
    "vue/comma-dangle": [
      "off"
    ],
    "vue/dot-location": [
      "off"
    ],
    "vue/html-closing-bracket-newline": [
      "off"
    ],
    "vue/html-closing-bracket-spacing": [
      "off"
    ],
    "vue/html-end-tags": [
      "off"
    ],
    "vue/html-indent": [
      "off"
    ],
    "vue/html-quotes": [
      "off"
    ],
    "vue/key-spacing": [
      "off"
    ],
    "vue/keyword-spacing": [
      "off"
    ],
    "vue/max-attributes-per-line": [
      "off"
    ],
    "vue/multiline-html-element-content-newline": [
      "off"
    ],
    "vue/mustache-interpolation-spacing": [
      "off"
    ],
    "vue/no-multi-spaces": [
      "off"
    ],
    "vue/no-spaces-around-equal-signs-in-attribute": [
      "off"
    ],
    "vue/object-curly-spacing": [
      "off"
    ],
    "vue/script-indent": [
      "off"
    ],
    "vue/singleline-html-element-content-newline": [
      "off"
    ],
    "vue/space-infix-ops": [
      "off"
    ],
    "vue/space-unary-ops": [
      "off"
    ],
    "unicorn/no-nested-ternary": [
      "off"
    ],
    "unicorn/number-literal-case": [
      "off"
    ],
    "standard/array-bracket-even-spacing": [
      "off"
    ],
    "standard/computed-property-even-spacing": [
      "off"
    ],
    "standard/object-curly-even-spacing": [
      "off"
    ],
    "react/jsx-closing-bracket-location": [
      "off",
      {
        "nonEmpty": "tag-aligned",
        "selfClosing": false
      }
    ],
    "react/jsx-closing-tag-location": [
      "off"
    ],
    "react/jsx-curly-newline": [
      "off",
      {
        "multiline": "consistent",
        "singleline": "forbid"
      }
    ],
    "react/jsx-curly-spacing": [
      "off",
      "never"
    ],
    "react/jsx-equals-spacing": [
      "off",
      "never"
    ],
    "react/jsx-first-prop-new-line": [
      "off"
    ],
    "react/jsx-indent-props": [
      "off",
      "tab"
    ],
    "react/jsx-props-no-multi-spaces": [
      "off"
    ],
    "react/jsx-tag-spacing": [
      "off",
      {
        "closingSlash": "never",
        "beforeSelfClosing": "never",
        "afterOpening": "never",
        "beforeClosing": "never"
      }
    ],
    "react/jsx-wrap-multilines": [
      "off",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "ignore",
        "logical": "ignore",
        "prop": "ignore"
      }
    ],
    "react/jsx-space-before-closing": [
      "off"
    ],
    "flowtype/boolean-style": [
      "off"
    ],
    "flowtype/delimiter-dangle": [
      "off"
    ],
    "flowtype/generic-spacing": [
      "off"
    ],
    "flowtype/object-type-delimiter": [
      "off"
    ],
    "flowtype/semi": [
      "off"
    ],
    "flowtype/space-after-type-colon": [
      "off"
    ],
    "flowtype/space-before-generic-bracket": [
      "off"
    ],
    "flowtype/space-before-type-colon": [
      "off"
    ],
    "flowtype/union-intersection-spacing": [
      "off"
    ],
    "babel/quotes": [
      0
    ],
    "babel/object-curly-spacing": [
      "off"
    ],
    "babel/semi": [
      "off"
    ],
    "@typescript-eslint/no-extra-parens": [
      "off"
    ],
    "arrow-body-style": [
      0
    ],
    "curly": [
      0
    ],
    "lines-around-comment": [
      0
    ],
    "max-len": [
      0
    ],
    "no-confusing-arrow": [
      0
    ],
    "no-mixed-operators": [
      0
    ],
    "no-tabs": [
      0
    ],
    "no-unexpected-multiline": [
      0
    ],
    "prefer-arrow-callback": [
      0
    ],
    "array-bracket-newline": [
      "off",
      "consistent"
    ],
    "array-bracket-spacing": [
      "off",
      "never"
    ],
    "array-element-newline": [
      "off",
      "consistent"
    ],
    "arrow-parens": [
      "off",
      "as-needed"
    ],
    "arrow-spacing": [
      "off",
      {
        "before": true,
        "after": true
      }
    ],
    "block-spacing": [
      "off"
    ],
    "comma-style": [
      "off",
      "last"
    ],
    "computed-property-spacing": [
      "off",
      "never",
      {
        "enforceForClassMembers": true
      }
    ],
    "dot-location": [
      "off",
      "property"
    ],
    "eol-last": [
      "off"
    ],
    "function-call-argument-newline": [
      "off",
      "consistent"
    ],
    "function-paren-newline": [
      "off"
    ],
    "generator-star": [
      "off"
    ],
    "generator-star-spacing": [
      "off",
      "both"
    ],
    "implicit-arrow-linebreak": [
      "off"
    ],
    "jsx-quotes": [
      "off"
    ],
    "key-spacing": [
      "off",
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "linebreak-style": [
      "off",
      "unix"
    ],
    "multiline-ternary": [
      "off"
    ],
    "newline-per-chained-call": [
      "off"
    ],
    "new-parens": [
      "off"
    ],
    "no-arrow-condition": [
      "off"
    ],
    "no-comma-dangle": [
      "off"
    ],
    "no-floating-decimal": [
      "off"
    ],
    "no-mixed-spaces-and-tabs": [
      "off"
    ],
    "no-multi-spaces": [
      "off"
    ],
    "no-multiple-empty-lines": [
      "off",
      {
        "max": 1
      }
    ],
    "no-reserved-keys": [
      "off"
    ],
    "no-space-before-semi": [
      "off"
    ],
    "no-trailing-spaces": [
      "off"
    ],
    "no-whitespace-before-property": [
      "off"
    ],
    "no-wrap-func": [
      "off"
    ],
    "nonblock-statement-body-position": [
      "off"
    ],
    "object-curly-newline": [
      "off"
    ],
    "object-curly-spacing": [
      "off",
      "never"
    ],
    "object-property-newline": [
      "off"
    ],
    "one-var-declaration-per-line": [
      "off"
    ],
    "operator-linebreak": [
      "off",
      "after"
    ],
    "padded-blocks": [
      "off",
      "never",
      {
        "allowSingleLineBlocks": false
      }
    ],
    "quote-props": [
      "off",
      "as-needed"
    ],
    "rest-spread-spacing": [
      "off",
      "never"
    ],
    "semi-spacing": [
      "off",
      {
        "before": false,
        "after": true
      }
    ],
    "semi-style": [
      "off",
      "last"
    ],
    "space-after-function-name": [
      "off"
    ],
    "space-after-keywords": [
      "off"
    ],
    "space-before-blocks": [
      "off",
      "always"
    ],
    "space-before-function-parentheses": [
      "off"
    ],
    "space-before-keywords": [
      "off"
    ],
    "space-in-brackets": [
      "off"
    ],
    "space-in-parens": [
      "off",
      "never"
    ],
    "space-infix-ops": [
      "off"
    ],
    "space-return-throw-case": [
      "off"
    ],
    "space-unary-ops": [
      "off"
    ],
    "space-unary-word-ops": [
      "off"
    ],
    "switch-colon-spacing": [
      "off",
      {
        "after": true,
        "before": false
      }
    ],
    "template-curly-spacing": [
      "off"
    ],
    "template-tag-spacing": [
      "off",
      "never"
    ],
    "unicode-bom": [
      "off",
      "never"
    ],
    "wrap-iife": [
      "off",
      "inside",
      {
        "functionPrototypeMethods": true
      }
    ],
    "wrap-regex": [
      "off"
    ],
    "yield-star-spacing": [
      "off",
      "both"
    ],
    "indent-legacy": [
      "off"
    ],
    "no-spaced-func": [
      "off"
    ],
    "react/button-has-type": [
      "error"
    ],
    "react/default-props-match-prop-types": [
      "error"
    ],
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/no-access-state-in-setstate": [
      "error"
    ],
    "react/no-array-index-key": [
      "error"
    ],
    "react/no-children-prop": [
      "error"
    ],
    "react/no-danger-with-children": [
      "error"
    ],
    "react/no-did-update-set-state": [
      "error"
    ],
    "react/no-direct-mutation-state": [
      "error"
    ],
    "react/no-find-dom-node": [
      "error"
    ],
    "react/no-is-mounted": [
      "error"
    ],
    "react/no-redundant-should-component-update": [
      "error"
    ],
    "react/no-render-return-value": [
      "error"
    ],
    "react/no-typos": [
      "error"
    ],
    "react/no-string-refs": [
      "error",
      {
        "noTemplateLiterals": true
      }
    ],
    "react/no-this-in-sfc": [
      "error"
    ],
    "react/no-unknown-property": [
      "error"
    ],
    "react/no-unsafe": [
      "error"
    ],
    "react/no-unused-prop-types": [
      "error"
    ],
    "react/no-unused-state": [
      "error"
    ],
    "react/prefer-read-only-props": [
      "error"
    ],
    "react/prop-types": [
      "error"
    ],
    "react/react-in-jsx-scope": [
      "error"
    ],
    "react/require-default-props": [
      "error",
      {
        "forbidDefaultForRequired": true,
        "ignoreFunctionalComponents": true
      }
    ],
    "react/self-closing-comp": [
      "error"
    ],
    "react/style-prop-object": [
      "error"
    ],
    "react/void-dom-elements-no-children": [
      "error"
    ],
    "react/jsx-boolean-value": [
      "error"
    ],
    "react/jsx-key": [
      "error",
      {
        "checkFragmentShorthand": true
      }
    ],
    "react/jsx-no-bind": [
      "error",
      {
        "allowArrowFunctions": true,
        "allowBind": false,
        "allowFunctions": false,
        "ignoreRefs": false,
        "ignoreDOMComponents": false
      }
    ],
    "react/jsx-no-comment-textnodes": [
      "error"
    ],
    "react/jsx-no-duplicate-props": [
      "error",
      {
        "ignoreCase": true
      }
    ],
    "react/jsx-no-script-url": [
      "error"
    ],
    "react/jsx-no-target-blank": [
      "error"
    ],
    "react/jsx-no-undef": [
      "error"
    ],
    "react/jsx-no-useless-fragment": [
      "error"
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      "never"
    ],
    "react/jsx-pascal-case": [
      "error"
    ],
    "react/jsx-uses-react": [
      "error"
    ],
    "react/jsx-uses-vars": [
      "error"
    ],
    "for-direction": [
      "error"
    ],
    "no-async-promise-executor": [
      "error"
    ],
    "no-await-in-loop": [
      "error"
    ],
    "no-compare-neg-zero": [
      "error"
    ],
    "no-cond-assign": [
      "error"
    ],
    "no-control-regex": [
      "error"
    ],
    "no-debugger": [
      "error"
    ],
    "no-dupe-else-if": [
      "error"
    ],
    "no-duplicate-case": [
      "error"
    ],
    "no-empty-character-class": [
      "error"
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "no-ex-assign": [
      "error"
    ],
    "no-extra-boolean-cast": [
      "error"
    ],
    "no-inner-declarations": [
      "error"
    ],
    "no-invalid-regexp": [
      "error"
    ],
    "no-irregular-whitespace": [
      "error"
    ],
    "no-loss-of-precision": [
      "error"
    ],
    "no-misleading-character-class": [
      "error"
    ],
    "no-promise-executor-return": [
      "error"
    ],
    "no-prototype-builtins": [
      "error"
    ],
    "no-regex-spaces": [
      "error"
    ],
    "no-sparse-arrays": [
      "error"
    ],
    "no-template-curly-in-string": [
      "error"
    ],
    "no-unreachable-loop": [
      "error"
    ],
    "no-unsafe-finally": [
      "error"
    ],
    "use-isnan": [
      "error"
    ],
    "accessor-pairs": [
      "error",
      {
        "enforceForClassMembers": true,
        "getWithoutSet": false,
        "setWithoutGet": true
      }
    ],
    "array-callback-return": [
      "error",
      {
        "allowImplicit": true,
        "checkForEach": false
      }
    ],
    "block-scoped-var": [
      "error"
    ],
    "complexity": [
      "warn"
    ],
    "default-case": [
      "error"
    ],
    "eqeqeq": [
      "error"
    ],
    "grouped-accessor-pairs": [
      "error",
      "getBeforeSet"
    ],
    "guard-for-in": [
      "error"
    ],
    "no-alert": [
      "error"
    ],
    "no-caller": [
      "error"
    ],
    "no-case-declarations": [
      "error"
    ],
    "no-constructor-return": [
      "error"
    ],
    "no-else-return": [
      "error",
      {
        "allowElseIf": false
      }
    ],
    "no-empty-pattern": [
      "error"
    ],
    "no-eq-null": [
      "error"
    ],
    "no-eval": [
      "error"
    ],
    "no-extend-native": [
      "error"
    ],
    "no-extra-bind": [
      "error"
    ],
    "no-extra-label": [
      "error"
    ],
    "no-fallthrough": [
      "error"
    ],
    "no-global-assign": [
      "error"
    ],
    "no-implicit-coercion": [
      "error"
    ],
    "no-implicit-globals": [
      "error"
    ],
    "no-implied-eval": [
      "error"
    ],
    "no-iterator": [
      "error"
    ],
    "no-labels": [
      "error"
    ],
    "no-lone-blocks": [
      "error"
    ],
    "no-multi-str": [
      "error"
    ],
    "no-new-func": [
      "error"
    ],
    "no-new-wrappers": [
      "error"
    ],
    "no-new": [
      "error"
    ],
    "no-octal-escape": [
      "error"
    ],
    "no-octal": [
      "error"
    ],
    "no-proto": [
      "error"
    ],
    "no-return-await": [
      "error"
    ],
    "no-script-url": [
      "error"
    ],
    "no-self-assign": [
      "error",
      {
        "props": true
      }
    ],
    "no-self-compare": [
      "error"
    ],
    "no-sequences": [
      "error"
    ],
    "no-unmodified-loop-condition": [
      "error"
    ],
    "no-unused-labels": [
      "error"
    ],
    "no-useless-call": [
      "error"
    ],
    "no-useless-concat": [
      "error"
    ],
    "no-useless-escape": [
      "error"
    ],
    "no-useless-return": [
      "error"
    ],
    "no-warning-comments": [
      "warn"
    ],
    "no-with": [
      "error"
    ],
    "prefer-promise-reject-errors": [
      "error",
      {
        "allowEmptyReject": true
      }
    ],
    "prefer-regex-literals": [
      "error"
    ],
    "radix": [
      "error"
    ],
    "yoda": [
      "error"
    ],
    "no-delete-var": [
      "error"
    ],
    "no-label-var": [
      "error"
    ],
    "no-restricted-globals": [
      "error",
      "event"
    ],
    "no-shadow-restricted-names": [
      "error"
    ],
    "no-undef-init": [
      "error"
    ],
    "no-buffer-constructor": [
      "error"
    ],
    "no-restricted-imports": [
      "error",
      "domain",
      "freelist",
      "smalloc",
      "sys",
      "colors"
    ],
    "capitalized-comments": [
      "error",
      "always",
      {
        "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\w+:",
        "ignoreInlineComments": true,
        "ignoreConsecutiveComments": true
      }
    ],
    "func-name-matching": [
      "error",
      {
        "considerPropertyDescriptor": true
      }
    ],
    "func-names": [
      "error",
      "never"
    ],
    "max-depth": [
      "warn"
    ],
    "max-nested-callbacks": [
      "warn",
      4
    ],
    "max-params": [
      "warn",
      {
        "max": 4
      }
    ],
    "max-statements-per-line": [
      "error"
    ],
    "new-cap": [
      "error",
      {
        "newIsCap": true,
        "capIsNew": true,
        "properties": true
      }
    ],
    "no-lonely-if": [
      "error"
    ],
    "no-multi-assign": [
      "error"
    ],
    "no-negated-condition": [
      "error"
    ],
    "no-new-object": [
      "error"
    ],
    "no-restricted-syntax": [
      "error",
      "WithStatement"
    ],
    "no-unneeded-ternary": [
      "error"
    ],
    "one-var": [
      "error",
      "never"
    ],
    "operator-assignment": [
      "error",
      "always"
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "multiline-block-like",
        "next": "*"
      }
    ],
    "prefer-exponentiation-operator": [
      "error"
    ],
    "spaced-comment": [
      "error",
      "always",
      {
        "line": {
          "exceptions": [
            "-",
            "+",
            "*"
          ],
          "markers": [
            "!",
            "/",
            "=>"
          ]
        },
        "block": {
          "exceptions": [
            "-",
            "+",
            "*"
          ],
          "markers": [
            "!",
            "*"
          ],
          "balanced": true
        }
      }
    ],
    "no-class-assign": [
      "error"
    ],
    "no-useless-computed-key": [
      "error",
      {
        "enforceForClassMembers": true
      }
    ],
    "no-useless-rename": [
      "error"
    ],
    "require-yield": [
      "error"
    ],
    "symbol-description": [
      "error"
    ],
    "promise/no-return-wrap": [
      "error"
    ],
    "promise/param-names": [
      "error"
    ],
    "promise/catch-or-return": [
      "error"
    ],
    "promise/no-native": [
      "off"
    ],
    "promise/no-nesting": [
      "warn"
    ],
    "promise/no-promise-in-callback": [
      "warn"
    ],
    "promise/no-callback-in-promise": [
      "warn"
    ],
    "promise/avoid-new": [
      "off"
    ],
    "promise/no-new-statics": [
      "error"
    ],
    "promise/no-return-in-finally": [
      "warn"
    ],
    "promise/valid-params": [
      "warn"
    ],
    "import/no-named-as-default": [
      1
    ],
    "import/no-named-as-default-member": [
      1
    ],
    "import/no-duplicates": [
      1
    ],
    "import/named": [
      2
    ],
    "import/namespace": [
      2
    ],
    "import/export": [
      2
    ]
  },
  "settings": {
    "react": {
      "version": "latest"
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    },
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    }
  },
  "ignorePatterns": []
}